#!/bin/bash
echo install google chrome
(
main() {
    # inspired from https://github.com/jessfraz/dockerfiles/blob/master/chrome/stable/Dockerfile
    set -exo pipefail ; export DEBIAN_FRONTEND=noninteractive

    local chrome_version="=123.0.6312.58-1"
    # looks like remote versions rotate out pretty often, just going to install some version of stable...
    # this is done by setting the version to an empty string
    chrome_version=""

    curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -

    # note as of 2022-09-15 installing stable chrome leads to /etc/apt/sources.list.d/google-chrome.list being created/rewritten
    # so this command's output file is now /etc/apt/sources.list.d/google-chrome.list to avoid duplicate entry warnings
    #
    # thanks google
    printf "deb https://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list

    apt-get update

    set +eo pipefail
    apt-get install -y "google-chrome-stable$chrome_version"
    local exitcode="$?"
    set -eo pipefail
    if [ $exitcode -ne 0 ]; then
        # going to raise an error unless the platform is aarch64
        if [[ "$(uname -m)" == "aarch64" ]]; then
            # let continue
            rm /etc/apt/sources.list.d/google-chrome.list
            apt-get update
            echo "warning: skipping google-chrome-stable package installation: architecture was aarch64 and as of 2022-09-15 is not present on the remote repository"
        else
            echo "failed to install google-chrome-stable package"
            exit $exitcode
        fi
    fi

    # grant user more permissions required to run chrome
    usermod -a -G audio,video vagrant
    sudo -u vagrant bash -c 'mkdir -p ~/Downloads'
}
main
)
