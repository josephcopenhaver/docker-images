#!/bin/bash

set -eo pipefail

# Get absolute path to current script parent dir and save to DIR
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

rm -f "$DIR/.env"
export_var() {
    local stmt="$(printf "export %q=%q" "$1" "$2")"
    eval "$stmt"
    printf '%s\n' "$stmt" >> "$DIR/.env"
}

export_var STATE_DIR "$DIR/.state"

mkdir -p "$STATE_DIR"
test -e "$STATE_DIR/.bash_history" || touch "$STATE_DIR/.bash_history"

if [ ! -s "$STATE_DIR/.bashrc.local" ]; then
    if [ -s "$DIR/sample-state/sample.bashrc.local" ]; then
        cp "$DIR/sample-state/sample.bashrc.local" "$STATE_DIR/.bashrc.local"
    else
        touch "$STATE_DIR/.bashrc.local"
    fi
fi

if [ ! -s "$STATE_DIR/.bashrc.noninteractive.local" ]; then
    if [ -s "$DIR/sample-state/sample.bashrc.noninteractive.local" ]; then
        cp "$DIR/sample-state/sample.bashrc.noninteractive.local" "$STATE_DIR/.bashrc.noninteractive.local"
    else
        touch "$STATE_DIR/.bashrc.noninteractive.local"
    fi
fi
